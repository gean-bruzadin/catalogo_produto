// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using catalogo_produto.Config;

#nullable disable

namespace catalogo_produto.Migrations
{
    [DbContext(typeof(DbConfig))]
    [Migration("20250808125829_PrimeiraMigration")]
    partial class PrimeiraMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("catalogo_produto.Models.Categoria", b =>
                {
                    b.Property<int>("Id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome_categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_categoria");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("catalogo_produto.Models.Comentario", b =>
                {
                    b.Property<int>("Id_comentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_comentario")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_produto")
                        .HasColumnType("int");

                    b.Property<int>("Id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("Texto_comentario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_comentario");

                    b.HasIndex("Id_produto");

                    b.HasIndex("Id_usuario");

                    b.ToTable("comentarios");
                });

            modelBuilder.Entity("catalogo_produto.Models.Produto", b =>
                {
                    b.Property<int>("Id_produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_registro_produto")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao_produto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("Id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome_produto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_produto");

                    b.HasIndex("Id_categoria");

                    b.HasIndex("Id_usuario");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("catalogo_produto.Models.Usuario", b =>
                {
                    b.Property<int>("Id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email_usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome_usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha_usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_usuario");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("catalogo_produto.Models.Comentario", b =>
                {
                    b.HasOne("catalogo_produto.Models.Produto", "produto")
                        .WithMany()
                        .HasForeignKey("Id_produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo_produto.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("Id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("produto");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("catalogo_produto.Models.Produto", b =>
                {
                    b.HasOne("catalogo_produto.Models.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("Id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo_produto.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("Id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
